@page "/chatroom"
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.SignalR.Client;
@using AzureServiceBusChatPOC.Hubs;

<h1>Blazor Chat Sample</h1>
<hr />

<p>
    Enter your name to start chatting:
</p>

<input type="text" maxlength="32" @bind="@_username" />
<button type="button" @onclick="@Chat"><span class="oi oi-chat" aria-hidden="true"></span> Chat!</button>



@code {
    private string _username;
    private string _hubUrl;
    private HubConnection _hubConnection;

    public async Task Chat()
    {
        // check username is valid
        //if (string.IsNullOrWhiteSpace(_username))
        //{
        //    _message = "Please enter a name";
        //    return;
        //};

        try
        {
            // Start chatting and force refresh UI, ref: https://github.com/dotnet/aspnetcore/issues/22159
            //_isChatting = true;
            await Task.Delay(1);

            // remove old messages if any
            //_messages.Clear();

            // Create the chat client
            string baseUrl = navigationManager.BaseUri;

            _hubUrl = baseUrl.TrimEnd('/') + ChatHub.HubUrl;

            _hubConnection = new HubConnectionBuilder()
                .WithUrl(_hubUrl)
                .Build();

            // _hubConnection.On<string, string>("Broadcast", BroadcastMessage);

            await _hubConnection.StartAsync();

            await SendAsync($"[Notice] {_username} joined chat room.");
        }
        catch (Exception e)
        {
            //_message = $"ERROR: Failed to start chat client: {e.Message}";
            //_isChatting = false;
        }
    }

    private async Task SendAsync(string message)
    {
        //if (_isChatting && !string.IsNullOrWhiteSpace(message))
        {
            await _hubConnection.SendAsync("Send", _username, message);

            //_newMessage = string.Empty;
        }
    }

}
